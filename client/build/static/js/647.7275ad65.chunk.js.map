{"version":3,"file":"static/js/647.7275ad65.chunk.js","mappings":"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","sources":["components/AuthForm.jsx","pages/Authentication.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Form, Link, useActionData, useNavigation, useSearchParams } from 'react-router-dom'\r\n\r\nconst AuthForm = () => {\r\n    const data = useActionData();\r\n    const [searchParams] = useSearchParams();\r\n    const navigation = useNavigation();\r\n\r\n    const isLogin = searchParams.get('mode') === 'login';\r\n    const isSubmitting = navigation.state === 'submitting';\r\n\r\n  return (\r\n    <div className='p-1 w-96 md:w-2/5'>\r\n        <Form method='post'>\r\n            <h1 className='text-3xl my-5 font-bold tracking-widest'>{isLogin ? 'Log in to your account' : 'Create a new user'}</h1>\r\n            {data && DataTransfer.errors && \r\n            (\r\n                <ul>\r\n                    {Object.values(data.errors).map(err => <li key={err} >{err}</li>)}  \r\n                </ul>\r\n            )}\r\n            {!isLogin && (\r\n                <div className=\"m-auto flex flex-col\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"name\" name='name' id='name' required className='rounded-md my-2 p-2 border-2 border-gray-500 bg-sky-900' />\r\n                </div>\r\n            )}\r\n            {data && data.message && <p className='px-3 py-1 rounded text-white bg-red-700 text-lg font-semibold tracking-wider text-center'>{data.message}</p>}\r\n            <div className=\"m-auto flex flex-col\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" name='email' id='email' required className='rounded-md my-2 p-2 border-2 border-gray-500 bg-sky-900' />\r\n            </div>\r\n            <div className=\"m-auto flex flex-col\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name='password' id='password' required className='rounded-md my-2 p-2 border-2 border-gray-500 bg-sky-900' />\r\n            </div>\r\n            <button className='px-5 py-2 rounded-md bg-orange-600 text-white font-semibold tracking-wider' style={{fontFamily: 'Quicksand'}} disabled={isSubmitting}>{isSubmitting ? \"Submitting\" : isLogin ? 'Login' : 'Register'}</button>\r\n        </Form>\r\n        <div className=\"flex flex-row items-center mt-[50px]\">\r\n            <p className='tracking-wider'>{isLogin ? \"Don't have any account ?\" : 'Already have an account ? '}</p> \r\n            <Link to={`?mode=${isLogin ? 'register' : 'login'}`} className='mx-2 py-1 px-3 rounded-md border-2 border-gray-500 font-semibold' style={{fontFamily: 'Quicksand'}}>\r\n                {isLogin ? 'Create new user' : 'Login'}\r\n            </Link>\r\n        </div>\r\n        <Link to=\"/\" className='py-1 rounded-md font-medium underline'>Back to Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthForm","import React from 'react'\r\nimport { json, redirect } from 'react-router-dom'\r\nimport AuthForm from '../components/AuthForm'\r\n\r\nconst AuthenticationPage = () => {\r\n  return (\r\n    <div className='min-h-screen flex items-center justify-center bg-sky-950 text-white'>\r\n      <AuthForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const action = async ({request}) => {\r\n  const searchParams = new URL(request.url).searchParams;\r\n  const mode = searchParams.get('mode') || 'login';\r\n\r\n  if(mode !== 'login' && mode !== 'register') {\r\n    throw json({message: \"Unsupported mode\"}, {status: 422})\r\n  }\r\n\r\n  const data = await request.formData();\r\n\r\n  const authData = {\r\n    email: data.get('email'),\r\n    password: data.get('password')\r\n  }\r\n\r\n  if (mode === 'register') {\r\n    authData.name = data.get('name')\r\n  }\r\n\r\n  const response = await fetch('http://localhost:4000/api/auth/' + mode, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(authData)\r\n  })\r\n\r\n  if(response.status === 422 || response.status === 401 || response.status === 400) {\r\n    return response;\r\n  }\r\n\r\n  if(!response.ok) {\r\n    throw json({message: \"Could not authenticate user, Please try again later\"}, {status: 500})\r\n  }\r\n\r\n  // manage token received from backend\r\n  const resData = await response.json();\r\n  const token = resData.token;\r\n\r\n  localStorage.setItem('token', token);\r\n  const expiration = new Date();\r\n  expiration.setHours(expiration.getHours() + 1);\r\n  localStorage.setItem('expiration', expiration.toISOString());\r\n\r\n  return redirect('/')\r\n}\r\n\r\nexport default AuthenticationPage"],"names":["data","useActionData","_useSearchParams","useSearchParams","searchParams","_slicedToArray","navigation","useNavigation","isLogin","get","isSubmitting","state","_jsxs","className","children","Form","method","_jsx","DataTransfer","errors","Object","values","map","err","htmlFor","type","name","id","required","message","style","fontFamily","disabled","Link","to","concat","action","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","request","mode","authData","response","resData","token","expiration","wrap","_context","prev","next","URL","url","json","status","formData","sent","email","password","fetch","headers","body","JSON","stringify","abrupt","ok","localStorage","setItem","Date","setHours","getHours","toISOString","redirect","stop","_x","apply","arguments","AuthForm"],"sourceRoot":""}