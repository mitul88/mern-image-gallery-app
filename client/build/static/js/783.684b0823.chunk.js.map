{"version":3,"file":"static/js/783.684b0823.chunk.js","mappings":"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","sources":["components/ImageItem.jsx","components/HeroSection.jsx","components/CategoryNavigation.jsx","components/ImageList.jsx","webpack://image-gallery-client/./src/ui/loading.module.css?9d64","ui/Loading.jsx","pages/Home.jsx","ui/LoadingImage.jsx","../node_modules/@tanstack/query-core/src/infiniteQueryObserver.ts","../node_modules/@tanstack/react-query/src/useInfiniteQuery.ts"],"sourcesContent":["import React from 'react'\r\nimport { BiLike, BiCommentDetail } from \"react-icons/bi\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ImageItem = ({image}) => {\r\n  return (\r\n    <Link to={`/image/${image._id}/${image.slug}`}>\r\n      <div className='rounded-md h-[300px] max-w-[300px] mx-auto bg-white flex flex-col shadow shadow-md' style={{fontFamily: \"Quicksand\"}}>\r\n          <img \r\n              className=\"h-[200px] rounded-t-md object-fill saturate-100 brightness-100\" \r\n              src={image.url} \r\n              alt={image.title} \r\n              />\r\n          <div className='h-[100px] px-2'>\r\n            <div className=\"flex flex-row justify-between items-center my-2\">\r\n              <h4 className='text-xl tracking-widest font-bold text-gray-500  pointer-events-none'>{image.title.length > 14 ? image.title.slice(0, 14) + \"...\" : image.title }</h4>\r\n              \r\n            </div>\r\n              <div className=\"flex flex-row justify-between items-center w-full pointer-events-none\">\r\n                  <div className='flex items-center'>\r\n                    <div className='rounded-md bg-gray-100 p-2 text-sm font-bold text-gray-500 flex flex-row items-center mr-2'><BiLike className='mr-2' /> {image.likesCount}</div>\r\n                    <div className='rounded-md bg-gray-100 p-2 text-sm font-bold text-gray-500 flex flex-row items-center'><BiCommentDetail className='mr-2' /> {image.commentsCount}</div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-400\">@{image.posted_by[0].name}</p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ImageItem","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div className='hidden md:block h-[220px] bg-sky-800 bg-fixed bg-gradient-to-r from-sky-800 via-sky-900 to-sky-950 text-white'>\r\n        <div className='container mx-auto h-full'>\r\n          <div className='w-full md:w-1/2 h-full mx-auto flex flex-col items-center justify-center'>\r\n            <h3 className=\"text-2xl lg:text-3xl text-center my-5\">Showcase your photgraphy skills to the world and share your thoughts with other photographers</h3>\r\n            <Link \r\n              to=\"1/profile/upload\" \r\n              className='bg-orange-600 shadow shadow-sky-950 shadow-lg ease-in duration-150 hover:shadow-none text-white text-lg rounded-md px-5 tracking-wider font-semibold text-sm py-2 flex flex-row items-center'\r\n              style={{fontFamily: 'Quicksand'}}  \r\n            >Upload</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default HeroSection","import { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst CategoryNavigation = ({categoryData}) => {\r\n  \r\n  const navigate = useNavigate()\r\n\r\n  const selectEvent = (e) => {\r\n    const value = e.target.value;\r\n    const innerText = e.target.innerText;\r\n    if(!value || !innerText) {\r\n      navigate(`/`)\r\n    }\r\n    navigate(`?category=${innerText.toLowerCase()}&id=${value}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div style={{fontFamily: \"Quicksand\"}} className='hidden md:block w-96 min-w-[700px] lg:min-w-[800px] md:flex flex-row justify-between mx-auto my-0 md:my-5 shadow shadow-md border border-gray-200 rounded-lg bg-white'>\r\n        <span className='bg-sky-900 text-white rounded-l-lg py-3 px-5 font-bold text-xs md:text-sm lg:text-md lg:tracking-wider'>Categories</span>\r\n        <Link to=\"/\" className='font-bold lg:tracking-wider text-orange-500 text-xs md:text-sm lg:text-md py-3 px-5'>All</Link>\r\n          {categoryData.map(category => (\r\n            <Link key={category._id} to={`?category=${category.name}&id=${category._id}`} className='font-bold lg:tracking-wider text-xs md:text-sm lg:text-md text-orange-500 py-3 px-5'>{category.name.toUpperCase()}</Link>\r\n          ))}\r\n    </div>\r\n    <div className=\"block md:hidden\">\r\n      <label htmlFor=\"category\" className='text-white bg-sky-900 px-5 py-2 rounded-l-md ml-5'>Filter Category:</label>\r\n      <select name=\"category\" id=\"category\" className='mr-5 mt-5 bg-white text-gray-600 px-5 py-2 w-60 sm:w-96 rounded-r-md'>\r\n        <option onClick={selectEvent} value=\"\">All</option>\r\n      {categoryData.map(category => (\r\n        <option key={category._id} value={category._id} className='bg-white text-gray-600' onClick={selectEvent}>{category.name.toUpperCase()}</option>\r\n      ))}\r\n      </select>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default CategoryNavigation","import React, { useEffect } from 'react'\r\nimport ImageItem from './ImageItem'\r\nimport CategoryNavigation from './CategoryNavigation'\r\nimport { useInfiniteQuery } from '@tanstack/react-query'\r\nimport { fetchImages } from '../utils/http';\r\nimport { useLocation } from 'react-router';\r\nimport LoadingImage from '../ui/LoadingImage';\r\n \r\nconst ImageList = ({categoryData}) => {\r\n  const location = useLocation();\r\n  const searchParam = new URLSearchParams(location.search).get('id');\r\n\r\n  const {data: imageData, hasNextPage, fetchNextPage, isFetchingNextPage} = useInfiniteQuery(\r\n    {\r\n      queryKey: ['images',  {category: searchParam}],\r\n      queryFn:({ pageParam = 1, queryKey}) => fetchImages({pageParam, ...queryKey[1]}),\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        return lastPage.data.hasNextPage ? lastPage.data.nextPage : undefined;\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n\r\n  useEffect(()=> {\r\n    let fetching = false;\r\n    const onScroll = async (event) => {\r\n      const {scrollHeight, scrollTop, clientHeight} = event.target.scrollingElement;\r\n    \r\n      if(!fetching && scrollHeight - scrollTop <= clientHeight * 1.2) {\r\n        fetching = true;\r\n        if(hasNextPage) await fetchNextPage();\r\n        fetching = false;\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", onScroll);\r\n    }\r\n  }, [])\r\n\r\n  {isFetchingNextPage && (<LoadingImage />)}\r\n\r\n  let content;\r\n  if(imageData) {\r\n    content = (\r\n        <>\r\n          {\r\n            imageData.pages.map((page) => \r\n              page.data.docs.map((imageItem) => (\r\n                <ImageItem key={imageItem._id} image={imageItem}/>\r\n                )\r\n              )\r\n            )\r\n          }\r\n          {isFetchingNextPage && (<LoadingImage />)}\r\n        </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <CategoryNavigation categoryData={categoryData} />\r\n    <div className='min-h-full grid sm:grid-cols-2 gap-3 md:grid-cols-3 lg:grid-cols-4 gap-5 py-5 px-[0px] lg:px-[150px]'>\r\n      {content}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageList","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loading_loader__4vRxc\",\"animloader\":\"loading_animloader__qmDh+\"};","import classes from './loading.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <span className={classes.loader}>Loading</span>\r\n  )\r\n}\r\n\r\nexport default Loading","import React, { Suspense } from 'react';\r\nimport HeroSection from '../components/HeroSection';\r\nimport ImageList from '../components/ImageList';\r\nimport Loading from '../ui/Loading';\r\nimport { useLoaderData } from 'react-router';\r\n\r\nconst HomePage = () => {\r\n  const data = useLoaderData()\r\n  return (\r\n    <div className='min-h-full bg-neutral-300  bg-gradient-to-r from-neutral-300 via-neutral-200 to-neutral-400'>\r\n      <HeroSection />\r\n      <main className=\"container mx-auto min-h-full\">\r\n        <Suspense fallback={<Loading />}>\r\n          <ImageList categoryData={data.data} />\r\n        </Suspense>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n\r\nexport const loader = async ({request}) => {\r\n  const searchParams = new URL(request.url).searchParams;\r\n  const param = searchParams.get('category');\r\n  \r\n  const response = await fetch(`https://galleria.cyclic.app/api/category`);\r\n  return response.json()\r\n}","import React from 'react'\r\n\r\nconst LoadingImage = () => {\r\n  return (\r\n    <div className='rounded-md h-[300px] w-[300px] mx-auto bg-white flex flex-col shadow shadow-md animate-pulse'>\r\n        <div className=\"h-[200px] mx-5 mt-5 rounded-t-md object-fill bg-gray-200\" ></div>\r\n        <div className='h-[100px] mx-5'>\r\n            <div className=\"flex flex-row justify-between items-center my-2 \">\r\n                <h4 className='bg-gray-200 p-2 pointer-events-none w-full h-[20px]'></h4>\r\n            </div>\r\n            <div className=\"flex flex-row justify-between items-center w-full pointer-events-none\">\r\n                <div className='flex items-center'>\r\n                <div className='rounded-md bg-gray-100 p-3 mr-2'></div>\r\n                <div className='rounded-md bg-gray-100 p-3 '></div>\r\n                </div>\r\n                <p className=\"text-sm bg-gray-200 p-2 w-[60px]\"></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingImage","import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n","'use client'\nimport { InfiniteQueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  QueryFunction,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types'\n\n// HOOK\n\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey' | 'queryFn'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1:\n    | TQueryKey\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg3?: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError> {\n  const options = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n  ) as UseInfiniteQueryResult<TData, TError>\n}\n"],"names":["_ref","image","_jsx","Link","to","concat","_id","slug","children","_jsxs","className","style","fontFamily","src","url","alt","title","length","slice","BiLike","likesCount","BiCommentDetail","commentsCount","posted_by","name","categoryData","navigate","useNavigate","selectEvent","e","value","target","innerText","toLowerCase","_Fragment","map","category","toUpperCase","htmlFor","id","onClick","content","location","useLocation","searchParam","URLSearchParams","search","get","_useInfiniteQuery","useInfiniteQuery","queryKey","queryFn","_ref2","_ref2$pageParam","pageParam","fetchImages","_objectSpread","getNextPageParam","lastPage","allPages","data","hasNextPage","nextPage","undefined","imageData","fetchNextPage","isFetchingNextPage","useEffect","fetching","onScroll","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_event$target$scrolli","scrollHeight","scrollTop","clientHeight","wrap","_context","prev","next","scrollingElement","stop","_x","apply","arguments","document","addEventListener","removeEventListener","LoadingImage","pages","page","docs","imageItem","ImageItem","CategoryNavigation","classes","useLoaderData","HeroSection","Suspense","fallback","Loading","ImageList","loader","request","searchParams","response","URL","fetch","sent","abrupt","json","InfiniteQueryObserver","_QueryObserver","_inherits","_super","_createSuper","client","options","_classCallCheck","call","_createClass","key","_get","_getPrototypeOf","prototype","this","bind","fetchPreviousPage","notifyOptions","behavior","infiniteQueryBehavior","_objectWithoutProperties","_excluded","meta","fetchMore","direction","_excluded2","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","fetchMeta","isFetchingPreviousPage","hasPreviousPage","QueryObserver","arg1","arg2","arg3","useBaseQuery"],"sourceRoot":""}